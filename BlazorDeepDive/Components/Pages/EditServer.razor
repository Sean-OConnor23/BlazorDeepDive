@page "/servers/{id:int}"

@inject NavigationManager navigationManager

<h3>EditServer</h3>

@if(@server != null){
    <EditForm Model="server" FormName="serverSubmit" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="server.Id" hidden></InputNumber>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name"></InputText>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City"></InputText>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline"></InputCheckbox>
            </div>
        </div>  
        <div>
            <button class="btn btn-primary" type="submit">Update</button>
        </div>
        <ValidationSummary></ValidationSummary>
    </EditForm>
}

<a href="/servers" class="btn btn-primary"> Close</a>

@code {
    [Parameter]
    public int id { get; set; }

    [SupplyParameterFromForm]
    private Server? server { get; set; }

    protected override void OnParametersSet()
    {
        server ??= ServersRepository.GetServerById(this.id);
    }

    private void Submit()
    {
        if(server != null)
        {
            ServersRepository.UpdateServer(server.Id, server);
        }

        navigationManager.NavigateTo("/servers");
    }
}
